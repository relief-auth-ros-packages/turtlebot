<launch>

  <arg name="resolution" />
  <arg name="robot_type" />

  <!-- For everything below see http://wiki.ros.org/rtabmap_ros/Tutorials/SetupOnYourRobot -->
  <arg name="namespace" default="rtabmap"/>

  <group ns="$(arg namespace)">
  <!--
  -->

    <!-- Choose visualization -->
    <arg name="rtabmapviz"                  default="true" />

    <!-- Localization-only mode -->
    <arg name="localization"                default="false"/>

    <!-- Corresponding config files -->
    <arg name="config_path"                 default="" /> <!-- To change RTAB-Map's parameters, set the path of config file (*.ini) generated by the standalone app -->
    <arg name="gui_cfg"                     default="~/.ros/rtabmap_gui.ini" />

    <!-- rviz config (kept for later use)
    <arg name="rviz_cfg"                    default="$(find rtabmap_ros)/launch/config/rgbd.rviz" />
    -->

    <arg name="odom_frame_id"               default="odom"/>            <!-- If set, TF is used to get odometry instead of the topic -->
    <arg name="map_frame_id"                default="map"/>
    <arg name="ground_truth_frame_id"       default=""/>                <!-- e.g., "world" -->
    <arg name="ground_truth_base_frame_id"  default=""/>                <!-- e.g., "tracker", a fake frame matching the frame "frame_id" (but on different TF tree) -->
    <arg name="database_path"               default="~/.ros/rtabmap.db"/>
    <arg name="queue_size"                  default="100"/>
    <arg name="wait_for_transform"          default="0.1"/>
    <arg name="args"                        default=""                  if="$(eval localization == true)"/>                <!-- delete_db_on_start, udebug -->
    <arg name="args"                        default="-d"                if="$(eval localization == false)"/>                <!-- delete_db_on_start, udebug -->
    <arg name="rtabmap_args"                default="$(arg args)"/>     <!-- deprecated, use "args" argument -->
    <arg name="launch_prefix"               default=""/>                <!-- for debugging purpose, it fills launch-prefix tag of the nodes -->
    <arg name="output"                      default="screen"/>          <!-- Control node output (screen or log) -->
    <arg name="publish_tf_map"              default="true"/>

    <!-- if timestamps of the input topics (rgb, d, scan) are synchronized using approximate or exact time policy-->
    <arg name="approx_sync"                 default="true"/>

    <!-- Already synchronized RGB-D related topic, with rtabmap_ros/rgbd_sync nodelet -->
    <arg name="rgbd_sync"                   default="true"/>           <!-- pre-sync rgb_topic, depth_topic, camera_info_topic -->
    <arg name="approx_rgbd_sync"            default="true"/>           <!-- false=exact synchronization -->

    <!-- RGB-D related topics; turtlebot-specific-->
    <arg name="rgb_topic"                   default="/camera/rgb/image_raw"               if="$(eval robot_type == 'turtlebot')"/>
    <arg name="depth_topic"                 default="/camera/depth/image_raw"             if="$(eval robot_type == 'turtlebot')"/>
    <arg name="camera_info_topic"           default="/camera/rgb/camera_info"             if="$(eval robot_type == 'turtlebot')"/>
    <arg name="scan_topic"                  default="/scan"                               if="$(eval robot_type == 'turtlebot')"/>
    <!-- <arg name="frame_id"                    default="/camera_link"                        if="$(eval robot_type == 'turtlebot')"/> -->
    <arg name="odom_topic"                  default="odom"                                if="$(eval robot_type == 'turtlebot')"/>

    <!-- RGB-D related topics; rb1-specific-->
    <arg name="rgb_topic"                   default="/front_rgbd_camera/rgb/image_raw"    if="$(eval robot_type == 'rb1')"/>
    <arg name="depth_topic"                 default="/front_rgbd_camera/depth/image_raw"  if="$(eval robot_type == 'rb1')"/>
    <arg name="camera_info_topic"           default="/front_rgbd_camera/rgb/camera_info"  if="$(eval robot_type == 'rb1')"/>
    <arg name="scan_topic"                  default="/front_laser/scan"                   if="$(eval robot_type == 'rb1')"/>
    <!-- <arg name="frame_id"                    default="/front_rgbd_camera_link"             if="$(eval robot_type == 'rb1')"/> -->
    <arg name="odom_topic"                  default="/robotnik_base_control/odom"         if="$(eval robot_type == 'rb1')"/>

    <arg name="frame_id"                    default="base_footprint" />
    <arg name="depth_camera_info_topic"     default="$(arg camera_info_topic)" />


    <arg name="rgbd_topic"                  default="rgbd_image" />
    <arg name="depth_scale"                 default="1.0" />

    <arg name="subscribe_depth"             default="false"/>
    <arg name="subscribe_rgb"               default="false"/>
    <arg name="subscribe_rgbd"              default="true"/>
    <arg name="subscribe_scan"              default="true"/>
    <arg name="subscribe_scan_cloud"        default="false"/>

    <arg name="scan_cloud_topic"            default="/scan_cloud"/>
    <arg name="scan_normal_k"               default="0"/>

    <arg name="vo_frame_id"                 default="$(arg odom_frame_id)"/> <!-- Visual/Icp odometry frame ID for TF -->
    <arg name="publish_tf_odom"             default="true"/>
    <arg name="wait_for_transform_duration" default="0.1"/>
    <arg name="odom_tf_angular_variance"    default="0.001"/>             <!-- If TF is used to get odometry, this is the default angular variance -->
    <arg name="odom_tf_linear_variance"     default="0.001"/>             <!-- If TF is used to get odometry, this is the default linear variance -->
    <arg name="odom_args"                   default=""/>                  <!-- More arguments for odometry (overwrite same parameters in rtabmap_args) -->
    <arg name="odom_sensor_sync"            default="true"/>
    <arg name="odom_guess_frame_id"         default=""/>
    <arg name="odom_guess_min_translation"  default="0"/>
    <arg name="odom_guess_min_rotation"     default="0"/>
    <arg name="imu_topic"                   default="/imu/data"/>         <!-- only used with VIO approaches -->
    <arg name="wait_imu_to_init"            default="false"/>

    <arg name="subscribe_user_data"         default="false"/>             <!-- user data synchronized subscription -->
    <arg name="user_data_topic"             default="/user_data"/>
    <arg name="user_data_async_topic"       default="/user_data_async" /> <!-- user data async subscription (rate should be lower than map update rate) -->

    <arg name="gps_topic"                   default="/gps/fix" />         <!-- gps async subscription -->

    <arg name="tag_topic"                   default="/tag_detections" />  <!-- apriltags async subscription -->
    <arg name="tag_linear_variance"         default="0.0001" />
    <arg name="tag_angular_variance"        default="9999" />             <!-- >=9999 means ignore rotation in optimization, when rotation estimation of the tag is not reliable -->


    <!-- Nodes -->

    <!-- ################################################################### -->
    <!-- Publishers of synchronised rgbd_image images -->
    <!-- ################################################################### -->
    <group ns="/front_rgbd_camera">
      <node pkg="nodelet" type="nodelet" name="front_camera_nodelet_manager" args="manager"/>
      <node pkg="nodelet" type="nodelet" name="rgbd_sync" args="load rtabmap_ros/rgbd_sync front_camera_nodelet_manager" output="$(arg output)">
        <remap from="rgb/image"       to="rgb/image_raw"/>
        <remap from="depth/image"     to="depth/image_raw"/>

        <param name="approx_sync"     type="bool"     value="$(arg approx_rgbd_sync)"/>
        <param name="queue_size"      type="int"      value="$(arg queue_size)"/>
        <param name="depth_scale"     type="double"   value="$(arg depth_scale)"/>
      </node>
    </group>

    <group ns="/left_rgbd_camera">
      <node pkg="nodelet" type="nodelet" name="left_camera_nodelet_manager" args="manager"/>
      <node pkg="nodelet" type="nodelet" name="rgbd_sync" args="load rtabmap_ros/rgbd_sync left_camera_nodelet_manager" output="$(arg output)">
        <remap from="rgb/image"       to="rgb/image_raw"/>
        <remap from="depth/image"     to="depth/image_raw"/>

        <param name="approx_sync"     type="bool"     value="$(arg approx_rgbd_sync)"/>
        <param name="queue_size"      type="int"      value="$(arg queue_size)"/>
        <param name="depth_scale"     type="double"   value="$(arg depth_scale)"/>
      </node>
    </group>


    <!-- ################################################################### -->
    <!-- Main rtabmap launcher -->
    <!-- ################################################################### -->
    <node name="rtabmap" pkg="rtabmap_ros" type="rtabmap" output="$(arg output)" args="$(arg rtabmap_args)" launch-prefix="$(arg launch_prefix)">

      <param name="subscribe_depth"                 type="bool"   value="$(arg subscribe_depth)"/>
      <param name="subscribe_rgbd"                  type="bool"   value="$(arg subscribe_rgbd)"/>
      <param name="subscribe_rgb"                   type="bool"   value="$(arg subscribe_rgb)"/>
      <param name="subscribe_scan"                  type="bool"   value="$(arg subscribe_scan)"/>
      <param name="subscribe_scan_cloud"            type="bool"   value="$(arg subscribe_scan_cloud)"/>
      <param name="subscribe_user_data"             type="bool"   value="$(arg subscribe_user_data)"/>
      <param name="frame_id"                        type="string" value="$(arg frame_id)"/>
      <param name="map_frame_id"                    type="string" value="$(arg map_frame_id)"/>
      <param name="odom_frame_id"                   type="string" value="$(arg odom_frame_id)"/>
      <param name="publish_tf"                      type="bool"   value="$(arg publish_tf_map)"/>
      <param name="ground_truth_frame_id"           type="string" value="$(arg ground_truth_frame_id)"/>
      <param name="ground_truth_base_frame_id"      type="string" value="$(arg ground_truth_base_frame_id)"/>
      <param name="odom_tf_angular_variance"        type="double" value="$(arg odom_tf_angular_variance)"/>
      <param name="odom_tf_linear_variance"         type="double" value="$(arg odom_tf_linear_variance)"/>
      <param name="odom_sensor_sync"                type="bool"   value="$(arg odom_sensor_sync)"/>
      <param name="wait_for_transform_duration"     type="double" value="$(arg wait_for_transform)"/>
      <param name="database_path"                   type="string" value="$(arg database_path)"/>
      <param name="approx_sync"                     type="bool"   value="$(arg approx_sync)"/>
      <param name="config_path"                     type="string" value="$(arg config_path)"/>
      <param name="queue_size"                      type="int"    value="$(arg queue_size)"/>
      <param name="scan_normal_k"                   type="int"    value="$(arg scan_normal_k)"/>

      <!-- RTAB-Map's parameters: do "rosrun rtabmap rtabmap (double-dash)params" to see the list of available parameters. -->
      <param name="RGBD/NeighborLinkRefining"       type="string" value="true"/>    <!-- Correct odometry using the input lidar topic using ICP -->
      <param name="RGBD/ProximityBySpace"           type="string" value="true"/>    <!-- Local loop closure detection (using estimated position) with locations in WM -->

      <!--
          By setting to false (which is the default), on loop closures the graph
          will be optimized from the first pose in the map. The TF /map -> /odom
          will change when this happens. When set to false, the graph is
          optimized from the latest node added to the map instead of the first.
          By optimizing from the last, the last pose keeps its value and all the
          previous poses are corrected according to it (so /odom and /map will
          always match together).
      -->
      <param name="RGBD/OptimizeFromGraphEnd"       type="string" value="false"/>
      <param name="RGBD/AngularUpdate"              type="string" value="0.01"/>    <!-- Update map only if the robot is moving -->
      <param name="RGBD/LinearUpdate"               type="string" value="0.01"/>    <!-- Update map only if the robot is moving -->

      <!-- https://github.com/introlab/rtabmap_ros/issues/270#issuecomment-417390541 -->
      <param name="RGBD/ProximityPathMaxNeighbors"  type="string" value="100"/>
      <param name="RGBD/LoopClosureReextractFeatures" type="string" value="true"/>

      <!-- This is a common problem with simulated environments with repetitive
           textures. Try decreasing RGBD/OptimizeMaxError parameter (default 1
           meter) to something like 0.1 meter or less. This will make rtabmap
           rejecting loop closures that screw up too much the map. -->
      <param name="RGBD/OptimizeMaxError"           type="double" value="0.05"  />

      <!-- 0=Frame-to-Map (F2M) 1=Frame-to-Frame (F2F)
           Use 1 in case of overload. Otherwise 0 produces better results -->
      <param name="Odom/Strategy"                   type="int"    value="0" />

      <!-- Correspondences: 0=Features Matching, 1=Optical Flow -->
      <param name="Vis/CorType"                                   value="0"/>
      <param name="Vis/MinInliers"                  type="string" value="15"/>      <!-- 3D visual words minimum inliers to accept loop closure -->
      <param name="Vis/InlierDistance"              type="string" value="0.05"/>     <!-- 3D visual words correspondence distance -->
      <!-- Nearest neighbor strategy : 0=Linear, 1=FLANN_KDTREE, 2=FLANN_LSH, 3=BRUTEFORCE
           Set to 1 for float descriptor like SIFT/SURF
           Set to 3 for binary descriptor like ORB/FREAK/BRIEF/BRISK -->
      <param name="Vis/CorNNType"                   type="string" value="3"/>
      <param name="Vis/MaxDepth"                                  value="0"/>
      <param name="Vis/EstimationType"                            value="0"/> <!-- should be 0 for multi-cameras -->
      <param name="Vis/CorGuessWinSize"             type="string" value="0"/> <!-- should be 0 for multi-cameras -->

      <param name="Kp/MaxDepth"                     type="string" value="0.0"/>
      <param name="Kp/NNStrategy"                   type="string" value="1"/> <!-- KdTree -->

      <param name="Icp/CorrespondenceRatio"         type="string" value="0.9"/>
      <param name="Icp/VoxelSize"                   type="string" value="$(arg resolution)"/>
      <param name="Icp/MaxCorrespondenceDistance"   type="string" value="0.01"/>

      <param name="Rtabmap/TimeThr"                 type="string" value="0"/>
      <param name="Rtabmap/StartNewMapOnLoopClosure" type="bool"  value="true" />
      <param name="Mem/RehearsalSimilarity"         type="string" value="0.30"/>

      <!--
           http://wiki.ros.org/rtabmap_ros/Tutorials/Advanced%20Parameter%20Tuning
           For most of UGV, the vehicle only runs on a flat ground, in this way
           you can force the visual odometry to track the vehicle in only
           3DOF (x,y,theta) and increase the robustness of the map. For rtabmap
           we can also constraint to 3 DoF loop closure detection and graph
           optimization: -->
      <param name="Reg/Force3DoF"                   type="string" value="true"/>
      <param name="Optimizer/Slam2D"                              value="true" />

      <!-- Loop closure transformation: 0=Visual, 1=ICP, 2=Visual+ICP;
           1 is better than 0 or 2 -->
      <param name="Reg/Strategy"                    type="string" value="1"/>

      <!-- [Graph optimization strategy: 0=TORO, 1=g2o and 2=GTSAM.] -->
      <param name="Optimizer/Strategy"              value="1" />

      <!--[Robust graph optimization using Vertigo (only work for g2o and GTSAM optimization strategies). Not compatible with "RGBD/OptimizeMaxError" if enabled.]-->
      <param name="Optimizer/Robust"                value="false" />

      <!-- [0=Levenberg 1=GaussNewton] -->
      <param name="g2o/Optimizer"                   value="0" />

      <!-- [Pixel variance used for SBA.] -->
      <param name="g2o/PixelVariance"               value="0.05" />

      <!-- [0=csparse 1=pcg 2=cholmod] -->
      <param name="g2o/Solver"                      value="1" />

      <param name="GridGlobal/MinSize"              type="string" value="20"/>
      <param name="Grid/3D"                         type="string" value="false"/>
      <param name="Grid/RangeMax"                   type="string" value="0.0"/>
      <param name="Grid/RangeMin"                   type="string" value="0.6"/>
      <param name="Grid/FromDepth"                  type="string" value="false"/>    <!-- If set to false, the octomap is not being constructed; only laser measurements count -->
      <param name="Grid/MaxDepth"                                 value="4.0"/>
      <param name="Grid/CellSize"                   type="string" value="$(arg resolution)"/>
      <param name="Grid/NoiseFilteringMinNeighbors" type="string" value="0"/>
      <param name="Grid/NoiseFilteringRadius"       type="string" value="0.05"/>


      <!-- localization mode -->
      <param     if="$(arg localization)" name="Mem/IncrementalMemory" type="string" value="false"/>
      <param unless="$(arg localization)" name="Mem/IncrementalMemory" type="string" value="true"/>
      <param name="Mem/InitWMWithAllNodes" type="string" value="$(arg localization)"/>

      <!-- Remaps -->
  	  <remap from="grid_map"        to="/map"/>

      <param name="rgbd_cameras"    type="int"           value="2"/>
      <remap from="rgbd_image0"     to="/front_rgbd_camera/rgbd_image"/>
      <remap from="rgbd_image1"     to="/left_rgbd_camera/rgbd_image"/>

      <remap from="scan"            to="$(arg scan_topic)"/>
      <remap from="scan_cloud"      to="$(arg scan_cloud_topic)"/>
      <remap from="user_data"       to="$(arg user_data_topic)"/>
      <remap from="user_data_async" to="$(arg user_data_async_topic)"/>
      <remap from="gps/fix"         to="$(arg gps_topic)"/>
      <remap from="tag_detections"  to="$(arg tag_topic)"/>
      <remap from="odom"            to="$(arg odom_topic)"/>
      <remap from="imu"             to="$(arg imu_topic)"/>

      <!-- In order to be able to save the map, octomap_saver only looks at the
      /octomap_full topic; so remap /rtabmap/octomap_full to /octomap_full -->
      <remap from="octomap_full"    to="/octomap_full"/>

    </node>


    <!-- ################################################################### -->
    <!-- Visualisation RTAB-Map -->
    <!-- ################################################################### -->
    <node if="$(arg rtabmapviz)" pkg="rtabmap_ros" type="rtabmapviz" name="rtabmapviz" args="-d $(arg gui_cfg)" output="$(arg output)" launch-prefix="$(arg launch_prefix)">
      <param name="subscribe_depth"             type="bool"   value="$(arg subscribe_depth)"/>
      <param name="subscribe_rgbd"              type="bool"   value="$(arg subscribe_rgbd)"/>
      <param name="subscribe_scan"              type="bool"   value="$(arg subscribe_scan)"/>
      <param name="subscribe_scan_cloud"        type="bool"   value="$(arg subscribe_scan_cloud)"/>
      <param name="frame_id"                    type="string" value="$(arg frame_id)"/>
      <param name="odom_frame_id"               type="string" value="$(arg odom_frame_id)"/>
      <param name="wait_for_transform_duration" type="double" value="$(arg wait_for_transform)"/>
      <param name="queue_size"                  type="int"    value="$(arg queue_size)"/>
      <param name="approx_sync"                 type="bool"   value="$(arg approx_sync)"/>

      <param name="rgbd_cameras"    type="int"    value="2"/>
      <remap from="rgbd_image0"     to="/front_rgbd_camera/rgbd_image"/>
      <remap from="rgbd_image1"     to="/left_rgbd_camera/rgbd_image"/>

      <remap from="odom"            to="$(arg odom_topic)"/>
      <remap from="scan"            to="$(arg scan_topic)"/>
      <remap from="scan_cloud"      to="$(arg scan_cloud_topic)"/>
    </node>

  </group>
  <!--
  -->

</launch>
